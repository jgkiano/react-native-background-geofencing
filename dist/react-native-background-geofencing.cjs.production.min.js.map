{"version":3,"file":"react-native-background-geofencing.cjs.production.min.js","sources":["../src/types.ts","../src/index.ts"],"sourcesContent":["export interface RNBackgroundGeofencing {\n  configureWebhook(webhook: RNBackgroundGeofencingWebhook): Promise<boolean>;\n}\n\nexport interface RNBackgroundGeofencingWebhook {\n  url: string;\n  timeout?: number;\n  headers?: {\n    [key: string]: any;\n  };\n  meta?: {\n    [key: string]: any;\n  };\n}\n\ntype ERROR_CODES = 'invalid_platform' | 'geofence_exception';\n\nexport class RNBackgroundGeofencingException extends Error {\n  code: string;\n  constructor(error: { code: ERROR_CODES; message: string }) {\n    super(error.message);\n    this.name = 'RNBackgroundGeofencingException';\n    this.message = error.message;\n    this.code = error.code;\n  }\n}\n","import { NativeModules, Platform, PlatformOSType } from 'react-native';\nimport {\n  RNBackgroundGeofencing,\n  RNBackgroundGeofencingWebhook,\n  RNBackgroundGeofencingException,\n} from './types';\n\nconst { BackgroundGeofencing } = NativeModules;\n\nconst SUPPORTED_PLATFORMS: Array<PlatformOSType> = ['android'];\n\nconst TAG = '[RNBackgroundGeofencing]: ';\n\nconst RNBackgroundGeofencing: RNBackgroundGeofencing = {\n  ...BackgroundGeofencing,\n};\n\nconst DEFAULT_WEBHOOK_CONFIGURATION = {\n  url: null,\n  headers: {},\n  timeout: 15000,\n};\n\nconst withPlatformSupport = <T, E>(\n  wrappedFunction: () => T,\n  errorValue: E\n): T | E => {\n  const currentPlatform = Platform.OS;\n  if (SUPPORTED_PLATFORMS.includes(currentPlatform)) {\n    return wrappedFunction();\n  } else {\n    console.warn(\n      TAG + `This library doesn't support ${currentPlatform} devices`\n    );\n    return errorValue;\n  }\n};\n\n/**\n * Configures a webhook that the device will use to send Geofence events via POST request\n * @param {RNBackgroundGeofencingWebhook}\n */\nexport async function configureWebhook(webhook: RNBackgroundGeofencingWebhook) {\n  return withPlatformSupport(() => {\n    if (typeof webhook?.url !== 'string') {\n      throw new RNBackgroundGeofencingException({\n        code: 'geofence_exception',\n        message: 'A valid url is required to configure a webhook',\n      });\n    }\n    return RNBackgroundGeofencing.configureWebhook({\n      ...DEFAULT_WEBHOOK_CONFIGURATION,\n      ...webhook,\n    });\n  }, false);\n}\n"],"names":["RNBackgroundGeofencingException","error","message","name","code","Error","SUPPORTED_PLATFORMS","RNBackgroundGeofencing","NativeModules","BackgroundGeofencing","DEFAULT_WEBHOOK_CONFIGURATION","url","headers","timeout","webhook","wrappedFunction","configureWebhook","includes","currentPlatform","Platform","OS","console","warn","TAG"],"mappings":"66CAiBaA,iCAECC,8BACJA,EAAMC,gBACPC,KAAO,oCACPD,QAAUD,EAAMC,UAChBE,KAAOH,EAAMG,0GAN+BC,QCR/CC,EAA6C,CAAC,WAI9CC,OAN2BC,gBAAzBC,sBAUFC,EAAgC,CACpCC,IAAK,KACLC,QAAS,GACTC,QAAS,wCAsB4BC,+BAlBrCC,EAmB2B,cACG,iBAAjBD,MAAAA,SAAAA,EAASH,WACZ,IAAIX,EAAgC,CACxCI,KAAM,qBACNF,QAAS,0DAGNK,EAAuBS,sBACzBN,EACAI,KAxBHR,EAAoBW,SADlBC,EAAkBC,WAASC,IAExBL,KAEPM,QAAQC,KACNC,0DAAsCL,eAsBvC,uCA/BuB,IAC1BH,EAGMG"}