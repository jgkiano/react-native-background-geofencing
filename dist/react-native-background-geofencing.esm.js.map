{"version":3,"file":"react-native-background-geofencing.esm.js","sources":["../src/types.ts","../src/index.ts"],"sourcesContent":["export interface RNBackgroundGeofencing {\n  configureWebhook(webhook: RNBackgroundGeofencingWebhook): Promise<boolean>;\n}\n\nexport interface RNBackgroundGeofencingWebhook {\n  url: string;\n  timeout?: number;\n  headers?: {\n    [key: string]: any;\n  };\n  meta?: {\n    [key: string]: any;\n  };\n}\n\ntype ERROR_CODES = 'invalid_platform' | 'geofence_exception';\n\nexport class RNBackgroundGeofencingException extends Error {\n  code: string;\n  constructor(error: { code: ERROR_CODES; message: string }) {\n    super(error.message);\n    this.name = 'RNBackgroundGeofencingException';\n    this.message = error.message;\n    this.code = error.code;\n  }\n}\n","import { NativeModules, Platform, PlatformOSType } from 'react-native';\nimport {\n  RNBackgroundGeofencing,\n  RNBackgroundGeofencingWebhook,\n  RNBackgroundGeofencingException,\n} from './types';\n\nconst { BackgroundGeofencing } = NativeModules;\n\nconst SUPPORTED_PLATFORMS: Array<PlatformOSType> = ['android'];\n\nconst TAG = '[RNBackgroundGeofencing]: ';\n\nconst RNBackgroundGeofencing: RNBackgroundGeofencing = {\n  ...BackgroundGeofencing,\n};\n\nconst DEFAULT_WEBHOOK_CONFIGURATION = {\n  url: null,\n  headers: {},\n  timeout: 15000,\n};\n\nconst withPlatformSupport = <T, E>(\n  wrappedFunction: () => T,\n  errorValue: E\n): T | E => {\n  const currentPlatform = Platform.OS;\n  if (SUPPORTED_PLATFORMS.includes(currentPlatform)) {\n    return wrappedFunction();\n  } else {\n    console.warn(\n      TAG + `This library doesn't support ${currentPlatform} devices`\n    );\n    return errorValue;\n  }\n};\n\n/**\n * Configures a webhook that the device will use to send Geofence events via POST request\n * @param {RNBackgroundGeofencingWebhook}\n */\nexport async function configureWebhook(webhook: RNBackgroundGeofencingWebhook) {\n  return withPlatformSupport(() => {\n    if (typeof webhook?.url !== 'string') {\n      throw new RNBackgroundGeofencingException({\n        code: 'geofence_exception',\n        message: 'A valid url is required to configure a webhook',\n      });\n    }\n    return RNBackgroundGeofencing.configureWebhook({\n      ...DEFAULT_WEBHOOK_CONFIGURATION,\n      ...webhook,\n    });\n  }, false);\n}\n"],"names":["RNBackgroundGeofencingException","error","message","name","code","Error","configureWebhook","webhook","withPlatformSupport","url","RNBackgroundGeofencing","DEFAULT_WEBHOOK_CONFIGURATION","BackgroundGeofencing","NativeModules","SUPPORTED_PLATFORMS","TAG","headers","timeout","wrappedFunction","errorValue","currentPlatform","Platform","OS","includes","console","warn"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAiBaA,+BAAb;AAAA;;AAEE,2CAAYC,KAAZ;;;AACE,8BAAMA,KAAK,CAACC,OAAZ;AACA,UAAKC,IAAL,GAAY,iCAAZ;AACA,UAAKD,OAAL,GAAeD,KAAK,CAACC,OAArB;AACA,UAAKE,IAAL,GAAYH,KAAK,CAACG,IAAlB;;AACD;;AAPH;AAAA,iCAAqDC,KAArD;;ACqBA;;;;AAIA,IAAsBC,gBAAtB,YAAsBA,gBAAtB,CAAuCC,OAAvC;AAAA;AACE,2BAAOC,mBAAmB,CAAC;AACzB,UAAI,QAAOD,OAAP,aAAOA,OAAP,uBAAOA,OAAO,CAAEE,GAAhB,MAAwB,QAA5B,EAAsC;AACpC,cAAM,IAAIT,+BAAJ,CAAoC;AACxCI,UAAAA,IAAI,EAAE,oBADkC;AAExCF,UAAAA,OAAO,EAAE;AAF+B,SAApC,CAAN;AAID;;AACD,aAAOQ,sBAAsB,CAACJ,gBAAvB,cACFK,6BADE,EAEFJ,OAFE,EAAP;AAID,KAXyB,EAWvB,KAXuB,CAA1B;AAYD,GAbD;AAAA;AAAA;AAAA;IAnCQK,uBAAyBC,cAAzBD;AAER,IAAME,mBAAmB,GAA0B,CAAC,SAAD,CAAnD;AAEA,IAAMC,GAAG,GAAG,4BAAZ;;AAEA,IAAML,sBAAsB,6BACvBE,oBADuB,CAA5B;;AAIA,IAAMD,6BAA6B,GAAG;AACpCF,EAAAA,GAAG,EAAE,IAD+B;AAEpCO,EAAAA,OAAO,EAAE,EAF2B;AAGpCC,EAAAA,OAAO,EAAE;AAH2B,CAAtC;;AAMA,IAAMT,mBAAmB,GAAG,SAAtBA,mBAAsB,CAC1BU,eAD0B,EAE1BC,UAF0B;AAI1B,MAAMC,eAAe,GAAGC,QAAQ,CAACC,EAAjC;;AACA,MAAIR,mBAAmB,CAACS,QAApB,CAA6BH,eAA7B,CAAJ,EAAmD;AACjD,WAAOF,eAAe,EAAtB;AACD,GAFD,MAEO;AACLM,IAAAA,OAAO,CAACC,IAAR,CACEV,GAAG,sCAAmCK,eAAnC,cADL;AAGA,WAAOD,UAAP;AACD;AACF,CAbD;;;;"}